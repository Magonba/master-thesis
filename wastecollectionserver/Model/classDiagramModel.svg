<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1493px" preserveAspectRatio="none" style="width:5177px;height:1493px;background:#FFFFFF;" version="1.1" viewBox="0 0 5177 1493" width="5177px" zoomAndPan="magnify"><defs><filter height="300%" id="f1iajic0kfmseo" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[248f897e4bb16c2722904b15df30346f]
class Logger--><rect codeLine="1" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="137.6328" id="Logger" style="stroke:#A80036;stroke-width:1.5;" width="365" x="338" y="83.5"/><ellipse cx="494.75" cy="99.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M497.0938,95.1719 C496.1563,94.7344 495.5625,94.5938 494.6875,94.5938 C492.0625,94.5938 490.0625,96.6719 490.0625,99.3906 L490.0625,100.5156 C490.0625,103.0938 492.1719,104.9844 495.0625,104.9844 C496.2813,104.9844 497.4375,104.6875 498.1875,104.1406 C498.7656,103.7344 499.0938,103.2813 499.0938,102.8906 C499.0938,102.4375 498.7031,102.0469 498.2344,102.0469 C498.0156,102.0469 497.8125,102.125 497.625,102.3125 C497.1719,102.7969 497.1719,102.7969 496.9844,102.8906 C496.5625,103.1563 495.875,103.2813 495.1094,103.2813 C493.0625,103.2813 491.7656,102.1875 491.7656,100.4844 L491.7656,99.3906 C491.7656,97.6094 493.0156,96.2969 494.75,96.2969 C495.3281,96.2969 495.9375,96.4531 496.4063,96.7031 C496.8906,96.9844 497.0625,97.2031 497.1563,97.6094 C497.2188,98.0156 497.25,98.1406 497.3906,98.2656 C497.5313,98.4063 497.7656,98.5156 497.9844,98.5156 C498.25,98.5156 498.5156,98.375 498.6875,98.1563 C498.7969,98 498.8281,97.8125 498.8281,97.3906 L498.8281,95.9688 C498.8281,95.5313 498.8125,95.4063 498.7188,95.25 C498.5625,94.9844 498.2813,94.8438 497.9844,94.8438 C497.6875,94.8438 497.4844,94.9375 497.2656,95.25 L497.0938,95.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="43" x="515.25" y="103.6543">Logger</text><line style="stroke:#A80036;stroke-width:1.5;" x1="339" x2="702" y1="115.5" y2="115.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="346" y="123.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="358" y="129.7104">loggers: { [loggerTitle: string]: winston.Logger; }</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="346" y="136.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="358" y="142.5151">today: string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="346" y="149.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="82" x="358" y="155.3198">logger: Logger</text><line style="stroke:#A80036;stroke-width:1.5;" x1="339" x2="702" y1="161.9141" y2="161.9141"/><ellipse cx="349" cy="172.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="358" y="176.1245">dbLog(information: string, severity: string): void</text><ellipse cx="349" cy="185.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="358" y="188.9292">fileAndConsoleLog(information: string, severity: string): void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="346" y="195.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="358" y="201.7339">updateLoggers(): void</text><ellipse cx="349" cy="211.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="112" x="358" y="214.5386">getLogger(): Logger</text><!--MD5=[908386ed5410ce6ab2f15f3d9dcaf6ff]
class DatabaseHandler--><rect codeLine="10" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="176.0469" id="DatabaseHandler" style="stroke:#A80036;stroke-width:1.5;" width="574" x="738.5" y="64.5"/><ellipse cx="969.25" cy="80.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M971.5938,76.1719 C970.6563,75.7344 970.0625,75.5938 969.1875,75.5938 C966.5625,75.5938 964.5625,77.6719 964.5625,80.3906 L964.5625,81.5156 C964.5625,84.0938 966.6719,85.9844 969.5625,85.9844 C970.7813,85.9844 971.9375,85.6875 972.6875,85.1406 C973.2656,84.7344 973.5938,84.2813 973.5938,83.8906 C973.5938,83.4375 973.2031,83.0469 972.7344,83.0469 C972.5156,83.0469 972.3125,83.125 972.125,83.3125 C971.6719,83.7969 971.6719,83.7969 971.4844,83.8906 C971.0625,84.1563 970.375,84.2813 969.6094,84.2813 C967.5625,84.2813 966.2656,83.1875 966.2656,81.4844 L966.2656,80.3906 C966.2656,78.6094 967.5156,77.2969 969.25,77.2969 C969.8281,77.2969 970.4375,77.4531 970.9063,77.7031 C971.3906,77.9844 971.5625,78.2031 971.6563,78.6094 C971.7188,79.0156 971.75,79.1406 971.8906,79.2656 C972.0313,79.4063 972.2656,79.5156 972.4844,79.5156 C972.75,79.5156 973.0156,79.375 973.1875,79.1563 C973.2969,79 973.3281,78.8125 973.3281,78.3906 L973.3281,76.9688 C973.3281,76.5313 973.3125,76.4063 973.2188,76.25 C973.0625,75.9844 972.7813,75.8438 972.4844,75.8438 C972.1875,75.8438 971.9844,75.9375 971.7656,76.25 L971.5938,76.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="104" x="989.75" y="84.6543">DatabaseHandler</text><line style="stroke:#A80036;stroke-width:1.5;" x1="739.5" x2="1311.5" y1="96.5" y2="96.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="746.5" y="104.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="758.5" y="110.7104">poolUp: boolean</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="746.5" y="117.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="54" x="758.5" y="123.5151">pool: Pool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="746.5" y="130.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="164" x="758.5" y="136.3198">dbHandler: DatabaseHandler</text><line style="stroke:#A80036;stroke-width:1.5;" x1="739.5" x2="1311.5" y1="142.9141" y2="142.9141"/><ellipse cx="749.5" cy="153.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="758.5" y="157.1245">endPool(): Promise&lt;void&gt;</text><ellipse cx="749.5" cy="166.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="548" x="758.5" y="169.9292">querying(queryString: string): Promise&lt;Record&lt;string, string | number | boolean | Date | null&gt;[]&gt;</text><ellipse cx="749.5" cy="179.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="758.5" y="182.7339">setupProject(projectname: string): Promise&lt;void&gt;</text><ellipse cx="749.5" cy="192.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="758.5" y="195.5386">deleteProject(projectname: string): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="746.5" y="202.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="465" x="758.5" y="208.3433">setupOrDeleteProject(projectname: string, setupOrDelete: string): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="746.5" y="214.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="758.5" y="221.1479">execSQLScript(relSQLFilePath: string): Promise&lt;void&gt;</text><ellipse cx="749.5" cy="230.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="295" x="758.5" y="233.9526">getDatabaseHandler(): Promise&lt;DatabaseHandler&gt;</text><!--MD5=[12ad08d51326dd5172f4e6da8b4d3826]
class MapArc--><rect codeLine="22" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="176.0469" id="MapArc" style="stroke:#A80036;stroke-width:1.5;" width="791" x="1348" y="64.5"/><ellipse cx="1716.75" cy="80.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1719.0938,76.1719 C1718.1563,75.7344 1717.5625,75.5938 1716.6875,75.5938 C1714.0625,75.5938 1712.0625,77.6719 1712.0625,80.3906 L1712.0625,81.5156 C1712.0625,84.0938 1714.1719,85.9844 1717.0625,85.9844 C1718.2813,85.9844 1719.4375,85.6875 1720.1875,85.1406 C1720.7656,84.7344 1721.0938,84.2813 1721.0938,83.8906 C1721.0938,83.4375 1720.7031,83.0469 1720.2344,83.0469 C1720.0156,83.0469 1719.8125,83.125 1719.625,83.3125 C1719.1719,83.7969 1719.1719,83.7969 1718.9844,83.8906 C1718.5625,84.1563 1717.875,84.2813 1717.1094,84.2813 C1715.0625,84.2813 1713.7656,83.1875 1713.7656,81.4844 L1713.7656,80.3906 C1713.7656,78.6094 1715.0156,77.2969 1716.75,77.2969 C1717.3281,77.2969 1717.9375,77.4531 1718.4063,77.7031 C1718.8906,77.9844 1719.0625,78.2031 1719.1563,78.6094 C1719.2188,79.0156 1719.25,79.1406 1719.3906,79.2656 C1719.5313,79.4063 1719.7656,79.5156 1719.9844,79.5156 C1720.25,79.5156 1720.5156,79.375 1720.6875,79.1563 C1720.7969,79 1720.8281,78.8125 1720.8281,78.3906 L1720.8281,76.9688 C1720.8281,76.5313 1720.8125,76.4063 1720.7188,76.25 C1720.5625,75.9844 1720.2813,75.8438 1719.9844,75.8438 C1719.6875,75.8438 1719.4844,75.9375 1719.2656,76.25 L1719.0938,76.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="45" x="1737.25" y="84.6543">MapArc</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1349" x2="2138" y1="96.5" y2="96.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1356" y="104.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="1368" y="110.7104">graph: Graph</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1356" y="117.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="1368" y="123.5151">sourceNode: MapNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1356" y="130.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="1368" y="136.3198">destinationNode: MapNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1356" y="142.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1368" y="149.1245">distance: number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1349" x2="2138" y1="155.7188" y2="155.7188"/><ellipse cx="1359" cy="166.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="1368" y="169.9292">getGraph(): Graph</text><ellipse cx="1359" cy="179.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="1368" y="182.7339">getSourceNode(): MapNode</text><ellipse cx="1359" cy="192.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="182" x="1368" y="195.5386">getDestinationNode(): MapNode</text><ellipse cx="1359" cy="205.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="1368" y="208.3433">getDistance(): number</text><ellipse cx="1359" cy="217.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="513" x="1368" y="221.1479">getArcsObjects(projectname: string, graph: Graph, nodes: MapNode[]): Promise&lt;MapArc[]&gt;</text><ellipse cx="1359" cy="230.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="765" x="1368" y="233.9526">createArc(projectname: string, graph: Graph, sourceNode: MapNode, destinationNode: MapNode, distance: number): Promise&lt;MapArc&gt;</text><!--MD5=[3fd616f346a44cd59a91eb10b19e157c]
class User--><rect codeLine="34" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="291.2891" id="User" style="stroke:#A80036;stroke-width:1.5;" width="515" x="2174" y="7"/><ellipse cx="2412.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2415.0938,18.6719 C2414.1563,18.2344 2413.5625,18.0938 2412.6875,18.0938 C2410.0625,18.0938 2408.0625,20.1719 2408.0625,22.8906 L2408.0625,24.0156 C2408.0625,26.5938 2410.1719,28.4844 2413.0625,28.4844 C2414.2813,28.4844 2415.4375,28.1875 2416.1875,27.6406 C2416.7656,27.2344 2417.0938,26.7813 2417.0938,26.3906 C2417.0938,25.9375 2416.7031,25.5469 2416.2344,25.5469 C2416.0156,25.5469 2415.8125,25.625 2415.625,25.8125 C2415.1719,26.2969 2415.1719,26.2969 2414.9844,26.3906 C2414.5625,26.6563 2413.875,26.7813 2413.1094,26.7813 C2411.0625,26.7813 2409.7656,25.6875 2409.7656,23.9844 L2409.7656,22.8906 C2409.7656,21.1094 2411.0156,19.7969 2412.75,19.7969 C2413.3281,19.7969 2413.9375,19.9531 2414.4063,20.2031 C2414.8906,20.4844 2415.0625,20.7031 2415.1563,21.1094 C2415.2188,21.5156 2415.25,21.6406 2415.3906,21.7656 C2415.5313,21.9063 2415.7656,22.0156 2415.9844,22.0156 C2416.25,22.0156 2416.5156,21.875 2416.6875,21.6563 C2416.7969,21.5 2416.8281,21.3125 2416.8281,20.8906 L2416.8281,19.4688 C2416.8281,19.0313 2416.8125,18.9063 2416.7188,18.75 C2416.5625,18.4844 2416.2813,18.3438 2415.9844,18.3438 C2415.6875,18.3438 2415.4844,18.4375 2415.2656,18.75 L2415.0938,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="29" x="2433.25" y="27.1543">User</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2175" x2="2688" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2182" y="47"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="2194" y="53.2104">email: string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2182" y="59.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="2194" y="66.0151">admin: boolean</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2182" y="72.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="2194" y="78.8198">passwordUnsafeVar: string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2182" y="85.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="2194" y="91.6245">projects: Project[]</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2175" x2="2688" y1="98.2188" y2="98.2188"/><ellipse cx="2185" cy="109.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="2194" y="112.4292">getMail(): string</text><ellipse cx="2185" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="212" x="2194" y="125.2339">setMail(email: string): Promise&lt;void&gt;</text><ellipse cx="2185" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="116" x="2194" y="138.0386">getAdmin(): boolean</text><ellipse cx="2185" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="2194" y="150.8433">setAdmin(admin: boolean): Promise&lt;void&gt;</text><ellipse cx="2185" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="2194" y="163.6479">getPassword(): string</text><ellipse cx="2185" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="2194" y="176.4526">setPassword(newPassword: string): Promise&lt;void&gt;</text><ellipse cx="2185" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="2194" y="189.2573">getProjects(): Project[]</text><ellipse cx="2185" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="2194" y="202.062">addProjectObject(project: Project): void</text><ellipse cx="2185" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="2194" y="214.8667">addProject(project: Project): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2182" y="221.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="2194" y="227.6714">addProjectToUserDB(project: Project): Promise&lt;void&gt;</text><ellipse cx="2185" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="2194" y="240.4761">deleteProjectObject(projectToDelete: Project): void</text><ellipse cx="2185" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="2194" y="253.2808">deleteProject(projectToDelete: Project): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2182" y="259.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="2194" y="266.0854">deleteProjectFromUserDB(project: Project): Promise&lt;void&gt;</text><ellipse cx="2185" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="445" x="2194" y="278.8901">getUserObject(email: string, admin: boolean, passwordUnsafeVar: string): User</text><ellipse cx="2185" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="489" x="2194" y="291.6948">createUser(email: string, admin: boolean, passwordUnsafeVar: string): Promise&lt;User&gt;</text><!--MD5=[c5e1a2ffe8335c5dce66f34a1d95e2c4]
class GarbageScenarioVersion--><rect codeLine="55" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="163.2422" id="GarbageScenarioVersion" style="stroke:#A80036;stroke-width:1.5;" width="1027" x="7" y="409.5"/><ellipse cx="440.75" cy="425.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M443.0938,421.1719 C442.1563,420.7344 441.5625,420.5938 440.6875,420.5938 C438.0625,420.5938 436.0625,422.6719 436.0625,425.3906 L436.0625,426.5156 C436.0625,429.0938 438.1719,430.9844 441.0625,430.9844 C442.2813,430.9844 443.4375,430.6875 444.1875,430.1406 C444.7656,429.7344 445.0938,429.2813 445.0938,428.8906 C445.0938,428.4375 444.7031,428.0469 444.2344,428.0469 C444.0156,428.0469 443.8125,428.125 443.625,428.3125 C443.1719,428.7969 443.1719,428.7969 442.9844,428.8906 C442.5625,429.1563 441.875,429.2813 441.1094,429.2813 C439.0625,429.2813 437.7656,428.1875 437.7656,426.4844 L437.7656,425.3906 C437.7656,423.6094 439.0156,422.2969 440.75,422.2969 C441.3281,422.2969 441.9375,422.4531 442.4063,422.7031 C442.8906,422.9844 443.0625,423.2031 443.1563,423.6094 C443.2188,424.0156 443.25,424.1406 443.3906,424.2656 C443.5313,424.4063 443.7656,424.5156 443.9844,424.5156 C444.25,424.5156 444.5156,424.375 444.6875,424.1563 C444.7969,424 444.8281,423.8125 444.8281,423.3906 L444.8281,421.9688 C444.8281,421.5313 444.8125,421.4063 444.7188,421.25 C444.5625,420.9844 444.2813,420.8438 443.9844,420.8438 C443.6875,420.8438 443.4844,420.9375 443.2656,421.25 L443.0938,421.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="151" x="461.25" y="429.6543">GarbageScenarioVersion</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="1033" y1="441.5" y2="441.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="449.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="27" y="455.7104">garbageScenario: GarbageScenario</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="462.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="27" y="468.5151">timing: Date</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="475.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="27" y="481.3198">nodesWaste: [MapNode, number][]</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="1033" y1="487.9141" y2="487.9141"/><ellipse cx="18" cy="498.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="232" x="27" y="502.1245">getGarbageScenario(): GarbageScenario</text><ellipse cx="18" cy="511.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="27" y="514.9292">getTiming(): Date</text><ellipse cx="18" cy="524.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="527.7339">getNodesWaste(): [MapNode, number][]</text><ellipse cx="18" cy="537.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="27" y="540.5386">isNewestVersion(): boolean</text><ellipse cx="18" cy="550.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="1001" x="27" y="553.3433">createGarbageScenarioVersion(projectname: string, garbageScenario: GarbageScenario, timing: Date, nodesWaste: [MapNode, number][]): Promise&lt;GarbageScenarioVersion&gt;</text><ellipse cx="18" cy="562.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="868" x="27" y="566.1479">getGarbageScenarioVersionsObjects(projectname: string, garbageScenario: GarbageScenario, nodes: MapNode[]): Promise&lt;GarbageScenarioVersion[]&gt;</text><!--MD5=[9e8cdc57c56bad5cdfc47653c9df3022]
class VehicleType--><rect codeLine="66" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="176.0469" id="VehicleType" style="stroke:#A80036;stroke-width:1.5;" width="1284" x="1069.5" y="403"/><ellipse cx="1670.25" cy="419" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1672.5938,414.6719 C1671.6563,414.2344 1671.0625,414.0938 1670.1875,414.0938 C1667.5625,414.0938 1665.5625,416.1719 1665.5625,418.8906 L1665.5625,420.0156 C1665.5625,422.5938 1667.6719,424.4844 1670.5625,424.4844 C1671.7813,424.4844 1672.9375,424.1875 1673.6875,423.6406 C1674.2656,423.2344 1674.5938,422.7813 1674.5938,422.3906 C1674.5938,421.9375 1674.2031,421.5469 1673.7344,421.5469 C1673.5156,421.5469 1673.3125,421.625 1673.125,421.8125 C1672.6719,422.2969 1672.6719,422.2969 1672.4844,422.3906 C1672.0625,422.6563 1671.375,422.7813 1670.6094,422.7813 C1668.5625,422.7813 1667.2656,421.6875 1667.2656,419.9844 L1667.2656,418.8906 C1667.2656,417.1094 1668.5156,415.7969 1670.25,415.7969 C1670.8281,415.7969 1671.4375,415.9531 1671.9063,416.2031 C1672.3906,416.4844 1672.5625,416.7031 1672.6563,417.1094 C1672.7188,417.5156 1672.75,417.6406 1672.8906,417.7656 C1673.0313,417.9063 1673.2656,418.0156 1673.4844,418.0156 C1673.75,418.0156 1674.0156,417.875 1674.1875,417.6563 C1674.2969,417.5 1674.3281,417.3125 1674.3281,416.8906 L1674.3281,415.4688 C1674.3281,415.0313 1674.3125,414.9063 1674.2188,414.75 C1674.0625,414.4844 1673.7813,414.3438 1673.4844,414.3438 C1673.1875,414.3438 1672.9844,414.4375 1672.7656,414.75 L1672.5938,414.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="74" x="1690.75" y="423.1543">VehicleType</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1070.5" x2="2352.5" y1="435" y2="435"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1077.5" y="443"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="1089.5" y="449.2104">project: Project</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1077.5" y="455.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="1089.5" y="462.0151">title: string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1077.5" y="468.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="1089.5" y="474.8198">vehicleTypeVersions: VehicleTypeVersion[]</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1070.5" x2="2352.5" y1="481.4141" y2="481.4141"/><ellipse cx="1080.5" cy="492.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="1089.5" y="495.6245">getTitle(): string</text><ellipse cx="1080.5" cy="505.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="1089.5" y="508.4292">setTitle(title: string): Promise&lt;void&gt;</text><ellipse cx="1080.5" cy="518.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="1089.5" y="521.2339">getVehicleTypeVersions(): VehicleTypeVersion[]</text><ellipse cx="1080.5" cy="530.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="1258" x="1089.5" y="534.0386">addVehicleTypeVersion(timing: Date, averageSpeedTour: number, averageSpeedDepot: number, averageStopTime: number, vehicleCapacity: number, arcsActivated: [MapArc, boolean][]): Promise&lt;VehicleTypeVersion&gt;</text><ellipse cx="1080.5" cy="543.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="586" x="1089.5" y="546.8433">deleteVehicleTypeVersion(vehicleTypeVersion: VehicleTypeVersion, results: Result[]): Promise&lt;void&gt;</text><ellipse cx="1080.5" cy="556.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="410" x="1089.5" y="559.6479">createVehicleType(project: Project, title: string): Promise&lt;VehicleType&gt;</text><ellipse cx="1080.5" cy="569.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="462" x="1089.5" y="572.4526">getVehicleTypesObjects(project: Project, graph: Graph): Promise&lt;VehicleType[]&gt;</text><!--MD5=[3ece4acf097a6d4cf22379f16dcbbf46]
class VehicleTypeVersion--><rect codeLine="78" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="265.6797" id="VehicleTypeVersion" style="stroke:#A80036;stroke-width:1.5;" width="1574" x="2388.5" y="358"/><ellipse cx="3111.25" cy="374" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3113.5938,369.6719 C3112.6563,369.2344 3112.0625,369.0938 3111.1875,369.0938 C3108.5625,369.0938 3106.5625,371.1719 3106.5625,373.8906 L3106.5625,375.0156 C3106.5625,377.5938 3108.6719,379.4844 3111.5625,379.4844 C3112.7813,379.4844 3113.9375,379.1875 3114.6875,378.6406 C3115.2656,378.2344 3115.5938,377.7813 3115.5938,377.3906 C3115.5938,376.9375 3115.2031,376.5469 3114.7344,376.5469 C3114.5156,376.5469 3114.3125,376.625 3114.125,376.8125 C3113.6719,377.2969 3113.6719,377.2969 3113.4844,377.3906 C3113.0625,377.6563 3112.375,377.7813 3111.6094,377.7813 C3109.5625,377.7813 3108.2656,376.6875 3108.2656,374.9844 L3108.2656,373.8906 C3108.2656,372.1094 3109.5156,370.7969 3111.25,370.7969 C3111.8281,370.7969 3112.4375,370.9531 3112.9063,371.2031 C3113.3906,371.4844 3113.5625,371.7031 3113.6563,372.1094 C3113.7188,372.5156 3113.75,372.6406 3113.8906,372.7656 C3114.0313,372.9063 3114.2656,373.0156 3114.4844,373.0156 C3114.75,373.0156 3115.0156,372.875 3115.1875,372.6563 C3115.2969,372.5 3115.3281,372.3125 3115.3281,371.8906 L3115.3281,370.4688 C3115.3281,370.0313 3115.3125,369.9063 3115.2188,369.75 C3115.0625,369.4844 3114.7813,369.3438 3114.4844,369.3438 C3114.1875,369.3438 3113.9844,369.4375 3113.7656,369.75 L3113.5938,369.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="120" x="3131.75" y="378.1543">VehicleTypeVersion</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2389.5" x2="3961.5" y1="390" y2="390"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2396.5" y="398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="2408.5" y="404.2104">vehicleType: VehicleType</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2396.5" y="410.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="2408.5" y="417.0151">timing: Date</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2396.5" y="423.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="2408.5" y="429.8198">averageSpeedTour: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2396.5" y="436.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="2408.5" y="442.6245">averageSpeedDepot: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2396.5" y="449.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="2408.5" y="455.4292">averageStopTime: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2396.5" y="462.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="2408.5" y="468.2339">vehicleCapacity: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2396.5" y="474.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="2408.5" y="481.0386">arcsActivated: [MapArc, boolean][]</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2389.5" x2="3961.5" y1="487.6328" y2="487.6328"/><ellipse cx="2399.5" cy="498.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="2408.5" y="501.8433">getVehicleType(): VehicleType</text><ellipse cx="2399.5" cy="511.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="2408.5" y="514.6479">getTiming(): Date</text><ellipse cx="2399.5" cy="524.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="2408.5" y="527.4526">getAverageSpeedTour(): number</text><ellipse cx="2399.5" cy="537.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="2408.5" y="540.2573">getAverageSpeedDepot(): number</text><ellipse cx="2399.5" cy="549.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="182" x="2408.5" y="553.062">getAverageStopTime(): number</text><ellipse cx="2399.5" cy="562.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="2408.5" y="565.8667">getVehicleCapacity(): number</text><ellipse cx="2399.5" cy="575.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="2408.5" y="578.6714">getArcsActivated(): [MapArc, boolean][]</text><ellipse cx="2399.5" cy="588.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="2408.5" y="591.4761">isNewestVersion(): boolean</text><ellipse cx="2399.5" cy="601.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="1548" x="2408.5" y="604.2808">createVehicleTypeVersion(projectname: string, vehicleType: VehicleType, timing: Date, averageSpeedTour: number, averageSpeedDepot: number, averageStopTime: number, vehicleCapacity: number, arcsActivated: [MapArc, boolean][]): Promise&lt;VehicleTypeVersion&gt;</text><ellipse cx="2399.5" cy="613.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="731" x="2408.5" y="617.0854">getVehicleTypeVersionsObjects(projectname: string, vehicleType: VehicleType, graph: Graph): Promise&lt;VehicleTypeVersion[]&gt;</text><!--MD5=[81bd20e0381b4631555d588155f2f5a3]
class Tour--><rect codeLine="97" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="227.2656" id="Tour" style="stroke:#A80036;stroke-width:1.5;" width="1165" x="3998" y="377.5"/><ellipse cx="4562.75" cy="393.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4565.0938,389.1719 C4564.1563,388.7344 4563.5625,388.5938 4562.6875,388.5938 C4560.0625,388.5938 4558.0625,390.6719 4558.0625,393.3906 L4558.0625,394.5156 C4558.0625,397.0938 4560.1719,398.9844 4563.0625,398.9844 C4564.2813,398.9844 4565.4375,398.6875 4566.1875,398.1406 C4566.7656,397.7344 4567.0938,397.2813 4567.0938,396.8906 C4567.0938,396.4375 4566.7031,396.0469 4566.2344,396.0469 C4566.0156,396.0469 4565.8125,396.125 4565.625,396.3125 C4565.1719,396.7969 4565.1719,396.7969 4564.9844,396.8906 C4564.5625,397.1563 4563.875,397.2813 4563.1094,397.2813 C4561.0625,397.2813 4559.7656,396.1875 4559.7656,394.4844 L4559.7656,393.3906 C4559.7656,391.6094 4561.0156,390.2969 4562.75,390.2969 C4563.3281,390.2969 4563.9375,390.4531 4564.4063,390.7031 C4564.8906,390.9844 4565.0625,391.2031 4565.1563,391.6094 C4565.2188,392.0156 4565.25,392.1406 4565.3906,392.2656 C4565.5313,392.4063 4565.7656,392.5156 4565.9844,392.5156 C4566.25,392.5156 4566.5156,392.375 4566.6875,392.1563 C4566.7969,392 4566.8281,391.8125 4566.8281,391.3906 L4566.8281,389.9688 C4566.8281,389.5313 4566.8125,389.4063 4566.7188,389.25 C4566.5625,388.9844 4566.2813,388.8438 4565.9844,388.8438 C4565.6875,388.8438 4565.4844,388.9375 4565.2656,389.25 L4565.0938,389.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="27" x="4583.25" y="397.6543">Tour</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3999" x2="5162" y1="409.5" y2="409.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4006" y="417.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="74" x="4018" y="423.7104">result: Result</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4006" y="430.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="4018" y="436.5151">timing: Date</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4006" y="443.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="4018" y="449.3198">tourtime: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4006" y="455.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="4018" y="462.1245">tourwaste: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4006" y="468.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="4018" y="474.9292">tourNodes: [MapNode, number, number][]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4006" y="481.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="4018" y="487.7339">vehicleTypeVersion: VehicleTypeVersion</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3999" x2="5162" y1="494.3281" y2="494.3281"/><ellipse cx="4009" cy="505.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="4018" y="508.5386">getResult(): Result</text><ellipse cx="4009" cy="518.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="4018" y="521.3433">getTourTiming(): Date</text><ellipse cx="4009" cy="530.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="4018" y="534.1479">getTourTime(): number</text><ellipse cx="4009" cy="543.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="4018" y="546.9526">getTourWaste(): number</text><ellipse cx="4009" cy="556.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="266" x="4018" y="559.7573">getTourNodes(): [MapNode, number, number][]</text><ellipse cx="4009" cy="569.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="4018" y="572.562">getVehicleTypeVersion(): VehicleTypeVersion</text><ellipse cx="4009" cy="582.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="1139" x="4018" y="585.3667">createTour(projectname: string, result: Result, timing: Date, tourtime: number, tourwaste: number, tourNodes: [MapNode, number, number][], vehicleTypeVersion: VehicleTypeVersion): Promise&lt;Tour&gt;</text><ellipse cx="4009" cy="594.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="676" x="4018" y="598.1714">getToursObjects(projectname: string, result: Result, nodes: MapNode[], vehicleTypes: VehicleType[]): Promise&lt;Tour[]&gt;</text><!--MD5=[3e49f4803b554c92c0b70fce4d7094e5]
class Facility--><rect codeLine="113" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="150.4375" id="Facility" style="stroke:#A80036;stroke-width:1.5;" width="481" x="280" y="850.5"/><ellipse cx="495.75" cy="866.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M498.0938,862.1719 C497.1563,861.7344 496.5625,861.5938 495.6875,861.5938 C493.0625,861.5938 491.0625,863.6719 491.0625,866.3906 L491.0625,867.5156 C491.0625,870.0938 493.1719,871.9844 496.0625,871.9844 C497.2813,871.9844 498.4375,871.6875 499.1875,871.1406 C499.7656,870.7344 500.0938,870.2813 500.0938,869.8906 C500.0938,869.4375 499.7031,869.0469 499.2344,869.0469 C499.0156,869.0469 498.8125,869.125 498.625,869.3125 C498.1719,869.7969 498.1719,869.7969 497.9844,869.8906 C497.5625,870.1563 496.875,870.2813 496.1094,870.2813 C494.0625,870.2813 492.7656,869.1875 492.7656,867.4844 L492.7656,866.3906 C492.7656,864.6094 494.0156,863.2969 495.75,863.2969 C496.3281,863.2969 496.9375,863.4531 497.4063,863.7031 C497.8906,863.9844 498.0625,864.2031 498.1563,864.6094 C498.2188,865.0156 498.25,865.1406 498.3906,865.2656 C498.5313,865.4063 498.7656,865.5156 498.9844,865.5156 C499.25,865.5156 499.5156,865.375 499.6875,865.1563 C499.7969,865 499.8281,864.8125 499.8281,864.3906 L499.8281,862.9688 C499.8281,862.5313 499.8125,862.4063 499.7188,862.25 C499.5625,861.9844 499.2813,861.8438 498.9844,861.8438 C498.6875,861.8438 498.4844,861.9375 498.2656,862.25 L498.0938,862.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="41" x="516.25" y="870.6543">Facility</text><line style="stroke:#A80036;stroke-width:1.5;" x1="281" x2="760" y1="882.5" y2="882.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="288" y="890.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="74" x="300" y="896.7104">result: Result</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="288" y="903.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="300" y="909.5151">node: MapNode</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="288" y="916.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="300" y="922.3198">waste: number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="281" x2="760" y1="928.9141" y2="928.9141"/><ellipse cx="291" cy="939.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="300" y="943.1245">getResult(): Result</text><ellipse cx="291" cy="952.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="300" y="955.9292">getNode(): MapNode</text><ellipse cx="291" cy="965.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="300" y="968.7339">getWaste(): number</text><ellipse cx="291" cy="978.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="420" x="300" y="981.5386">getFacilitiesObjects(result: Result, nodes: MapNode[]): Promise&lt;Facility[]&gt;</text><ellipse cx="291" cy="991.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="455" x="300" y="994.3433">createFacility(node: MapNode, result: Result, waste: number): Promise&lt;Facility&gt;</text><!--MD5=[2741598bdf59a7d7e0d5c97658fd3022]
class Result--><rect codeLine="123" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="444.9453" id="Result" style="stroke:#A80036;stroke-width:1.5;" width="1855" x="796" y="703"/><ellipse cx="1701.25" cy="719" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1703.5938,714.6719 C1702.6563,714.2344 1702.0625,714.0938 1701.1875,714.0938 C1698.5625,714.0938 1696.5625,716.1719 1696.5625,718.8906 L1696.5625,720.0156 C1696.5625,722.5938 1698.6719,724.4844 1701.5625,724.4844 C1702.7813,724.4844 1703.9375,724.1875 1704.6875,723.6406 C1705.2656,723.2344 1705.5938,722.7813 1705.5938,722.3906 C1705.5938,721.9375 1705.2031,721.5469 1704.7344,721.5469 C1704.5156,721.5469 1704.3125,721.625 1704.125,721.8125 C1703.6719,722.2969 1703.6719,722.2969 1703.4844,722.3906 C1703.0625,722.6563 1702.375,722.7813 1701.6094,722.7813 C1699.5625,722.7813 1698.2656,721.6875 1698.2656,719.9844 L1698.2656,718.8906 C1698.2656,717.1094 1699.5156,715.7969 1701.25,715.7969 C1701.8281,715.7969 1702.4375,715.9531 1702.9063,716.2031 C1703.3906,716.4844 1703.5625,716.7031 1703.6563,717.1094 C1703.7188,717.5156 1703.75,717.6406 1703.8906,717.7656 C1704.0313,717.9063 1704.2656,718.0156 1704.4844,718.0156 C1704.75,718.0156 1705.0156,717.875 1705.1875,717.6563 C1705.2969,717.5 1705.3281,717.3125 1705.3281,716.8906 L1705.3281,715.4688 C1705.3281,715.0313 1705.3125,714.9063 1705.2188,714.75 C1705.0625,714.4844 1704.7813,714.3438 1704.4844,714.3438 C1704.1875,714.3438 1703.9844,714.4375 1703.7656,714.75 L1703.5938,714.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="36" x="1721.75" y="723.1543">Result</text><line style="stroke:#A80036;stroke-width:1.5;" x1="797" x2="2650" y1="735" y2="735"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="743"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="816" y="749.2104">project: Project</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="755.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="816" y="762.0151">timing: Date</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="768.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="816" y="774.8198">garbageScenarioVersion: GarbageScenarioVersion</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="781.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="816" y="787.6245">collectionPointScenarioVersion: CollectionPointScenarioVersion</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="794.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="816" y="800.4292">vehTypeVersAndWasteDepotNodes: [VehicleTypeVersion, MapNode[]][]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="807.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="74" x="816" y="813.2339">model: string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="819.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="816" y="826.0386">maxWalkingDistance: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="832.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="816" y="838.8433">minWaste: number | null</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="845.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="816" y="851.6479">totalTime: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="858.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="68" x="816" y="864.4526">tours: Tour[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="871.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="816" y="877.2573">facilities: Facility[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="883.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="816" y="890.062">completed: boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="797" x2="2650" y1="896.6563" y2="896.6563"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="904.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="816" y="910.8667">createXMLInputLeaveInFolderAndExecuteOptimization(): Promise&lt;void&gt;</text><ellipse cx="807" cy="920.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="816" y="923.6714">getProject(): Project</text><ellipse cx="807" cy="933.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="816" y="936.4761">getTiming(): Date</text><ellipse cx="807" cy="946.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="816" y="949.2808">getGarbageScenarioVersion(): GarbageScenarioVersion</text><ellipse cx="807" cy="958.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="816" y="962.0854">getCollectionPointScenarioVersion(): CollectionPointScenarioVersion</text><ellipse cx="807" cy="971.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="440" x="816" y="974.8901">getVehTypeVersAndWasteDepotNodes(): [VehicleTypeVersion, MapNode[]][]</text><ellipse cx="807" cy="984.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="816" y="987.6948">getModel(): string</text><ellipse cx="807" cy="997.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="816" y="1000.4995">getMaxWalkingDistance(): number</text><ellipse cx="807" cy="1010.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="816" y="1013.3042">getMinWaste(): number | null</text><ellipse cx="807" cy="1022.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="816" y="1026.1089">getTours(): Tour[]</text><ellipse cx="807" cy="1035.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="965" x="816" y="1038.9136">setResultData(toursData: Tour[] | [number, number, [MapNode, number, number][], VehicleTypeVersion][], facilitiesData: [MapNode, number][] | Facility[]): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="1045.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="668" x="816" y="1051.7183">setTours(toursData: Tour[] | [number, number, [MapNode, number, number][], VehicleTypeVersion][]): Promise&lt;void&gt;</text><ellipse cx="807" cy="1061.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="816" y="1064.5229">getCompleted(): boolean</text><ellipse cx="807" cy="1074.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="816" y="1077.3276">getTotalTime(): number</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="1083.9219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="816" y="1090.1323">setTotalTime(totalTime: number): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="804" y="1096.7266"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="428" x="816" y="1102.937">setFacilities(facilitiesData: [MapNode, number][] | Facility[]): Promise&lt;void&gt;</text><ellipse cx="807" cy="1112.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="816" y="1115.7417">getFacilities(): Facility[]</text><ellipse cx="807" cy="1125.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="1829" x="816" y="1128.5464">createResult(project: Project, timing: Date, garbageScenarioVersion: GarbageScenarioVersion, collectionPointScenarioVersion: CollectionPointScenarioVersion, vehTypeVersAndWasteDepotNodes: [VehicleTypeVersion, MapNode[]][], model: string, maxWalkingDistance: number, minWaste: number | null): Promise&lt;Result&gt;</text><ellipse cx="807" cy="1138.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="1105" x="816" y="1141.3511">getResultsObjects(project: Project, garbageScenarios: GarbageScenario[], collectionPointScenarios: CollectionPointScenario[], vehicleTypes: VehicleType[], nodes: MapNode[]): Promise&lt;Result[]&gt;</text><!--MD5=[06abd8357bc654fcfcdbe9b331bc63b2]
class GarbageScenario--><rect codeLine="156" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="176.0469" id="GarbageScenario" style="stroke:#A80036;stroke-width:1.5;" width="692" x="2686.5" y="837.5"/><ellipse cx="2975.75" cy="853.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2978.0938,849.1719 C2977.1563,848.7344 2976.5625,848.5938 2975.6875,848.5938 C2973.0625,848.5938 2971.0625,850.6719 2971.0625,853.3906 L2971.0625,854.5156 C2971.0625,857.0938 2973.1719,858.9844 2976.0625,858.9844 C2977.2813,858.9844 2978.4375,858.6875 2979.1875,858.1406 C2979.7656,857.7344 2980.0938,857.2813 2980.0938,856.8906 C2980.0938,856.4375 2979.7031,856.0469 2979.2344,856.0469 C2979.0156,856.0469 2978.8125,856.125 2978.625,856.3125 C2978.1719,856.7969 2978.1719,856.7969 2977.9844,856.8906 C2977.5625,857.1563 2976.875,857.2813 2976.1094,857.2813 C2974.0625,857.2813 2972.7656,856.1875 2972.7656,854.4844 L2972.7656,853.3906 C2972.7656,851.6094 2974.0156,850.2969 2975.75,850.2969 C2976.3281,850.2969 2976.9375,850.4531 2977.4063,850.7031 C2977.8906,850.9844 2978.0625,851.2031 2978.1563,851.6094 C2978.2188,852.0156 2978.25,852.1406 2978.3906,852.2656 C2978.5313,852.4063 2978.7656,852.5156 2978.9844,852.5156 C2979.25,852.5156 2979.5156,852.375 2979.6875,852.1563 C2979.7969,852 2979.8281,851.8125 2979.8281,851.3906 L2979.8281,849.9688 C2979.8281,849.5313 2979.8125,849.4063 2979.7188,849.25 C2979.5625,848.9844 2979.2813,848.8438 2978.9844,848.8438 C2978.6875,848.8438 2978.4844,848.9375 2978.2656,849.25 L2978.0938,849.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="105" x="2996.25" y="857.6543">GarbageScenario</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2687.5" x2="3377.5" y1="869.5" y2="869.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2694.5" y="877.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="2706.5" y="883.7104">project: Project</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2694.5" y="890.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="2706.5" y="896.5151">title: string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2694.5" y="903.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="2706.5" y="909.3198">garbageScenarioVersions: GarbageScenarioVersion[]</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2687.5" x2="3377.5" y1="915.9141" y2="915.9141"/><ellipse cx="2697.5" cy="926.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="2706.5" y="930.1245">getTitle(): string</text><ellipse cx="2697.5" cy="939.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="2706.5" y="942.9292">setTitle(title: string): Promise&lt;void&gt;</text><ellipse cx="2697.5" cy="952.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="2706.5" y="955.7339">getGarbageScenarioVersions(): GarbageScenarioVersion[]</text><ellipse cx="2697.5" cy="965.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="658" x="2706.5" y="968.5386">addGarbageScenarioVersion(timing: Date, nodesWaste: [MapNode, number][]): Promise&lt;GarbageScenarioVersion&gt;</text><ellipse cx="2697.5" cy="978.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="666" x="2706.5" y="981.3433">deleteGarbageScenarioVersion(garbageScenarioVersion: GarbageScenarioVersion, results: Result[]): Promise&lt;void&gt;</text><ellipse cx="2697.5" cy="990.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="464" x="2706.5" y="994.1479">createGarbageScenario(project: Project, title: string): Promise&lt;GarbageScenario&gt;</text><ellipse cx="2697.5" cy="1003.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="546" x="2706.5" y="1006.9526">getGarbageScenariosObjects(project: Project, nodes: MapNode[]): Promise&lt;GarbageScenario[]&gt;</text><!--MD5=[79d378210367c0c6ec62ef762ddfbd1b]
class Project--><rect codeLine="168" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="483.3594" id="Project" style="stroke:#A80036;stroke-width:1.5;" width="1748" x="3413.5" y="684"/><ellipse cx="4262.75" cy="700" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4265.0938,695.6719 C4264.1563,695.2344 4263.5625,695.0938 4262.6875,695.0938 C4260.0625,695.0938 4258.0625,697.1719 4258.0625,699.8906 L4258.0625,701.0156 C4258.0625,703.5938 4260.1719,705.4844 4263.0625,705.4844 C4264.2813,705.4844 4265.4375,705.1875 4266.1875,704.6406 C4266.7656,704.2344 4267.0938,703.7813 4267.0938,703.3906 C4267.0938,702.9375 4266.7031,702.5469 4266.2344,702.5469 C4266.0156,702.5469 4265.8125,702.625 4265.625,702.8125 C4265.1719,703.2969 4265.1719,703.2969 4264.9844,703.3906 C4264.5625,703.6563 4263.875,703.7813 4263.1094,703.7813 C4261.0625,703.7813 4259.7656,702.6875 4259.7656,700.9844 L4259.7656,699.8906 C4259.7656,698.1094 4261.0156,696.7969 4262.75,696.7969 C4263.3281,696.7969 4263.9375,696.9531 4264.4063,697.2031 C4264.8906,697.4844 4265.0625,697.7031 4265.1563,698.1094 C4265.2188,698.5156 4265.25,698.6406 4265.3906,698.7656 C4265.5313,698.9063 4265.7656,699.0156 4265.9844,699.0156 C4266.25,699.0156 4266.5156,698.875 4266.6875,698.6563 C4266.7969,698.5 4266.8281,698.3125 4266.8281,697.8906 L4266.8281,696.4688 C4266.8281,696.0313 4266.8125,695.9063 4266.7188,695.75 C4266.5625,695.4844 4266.2813,695.3438 4265.9844,695.3438 C4265.6875,695.3438 4265.4844,695.4375 4265.2656,695.75 L4265.0938,695.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="41" x="4283.25" y="704.1543">Project</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3414.5" x2="5160.5" y1="716" y2="716"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3421.5" y="724"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="3433.5" y="730.2104">projectname: string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3421.5" y="736.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="3433.5" y="743.0151">users: User[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3421.5" y="749.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="3433.5" y="755.8198">graph: Graph</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3421.5" y="762.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="3433.5" y="768.6245">garbageScenarios: GarbageScenario[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3421.5" y="775.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="3433.5" y="781.4292">collectionPointScenarios: CollectionPointScenario[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3421.5" y="788.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="3433.5" y="794.2339">vehicleTypes: VehicleType[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3421.5" y="800.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="3433.5" y="807.0386">results: Result[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3421.5" y="813.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="3433.5" y="819.8433">modifiedBy: User | undefined</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3414.5" x2="5160.5" y1="826.4375" y2="826.4375"/><ellipse cx="3424.5" cy="837.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="3433.5" y="840.6479">getProjectName(): string</text><ellipse cx="3424.5" cy="850.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="3433.5" y="853.4526">getUsers(): User[]</text><ellipse cx="3424.5" cy="863.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="3433.5" y="866.2573">getGraph(): Graph</text><ellipse cx="3424.5" cy="875.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="3433.5" y="879.062">getGarbageScenarios(): GarbageScenario[]</text><ellipse cx="3424.5" cy="888.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="3433.5" y="891.8667">addGarbageScenario(title: string): Promise&lt;GarbageScenario&gt;</text><ellipse cx="3424.5" cy="901.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="442" x="3433.5" y="904.6714">deleteGarbageScenario(garbageScenario: GarbageScenario): Promise&lt;void&gt;</text><ellipse cx="3424.5" cy="914.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="3433.5" y="917.4761">getCollectionPointScenarios(): CollectionPointScenario[]</text><ellipse cx="3424.5" cy="927.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="425" x="3433.5" y="930.2808">addCollectionPointScenario(title: string): Promise&lt;CollectionPointScenario&gt;</text><ellipse cx="3424.5" cy="939.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="544" x="3433.5" y="943.0854">deleteCollectionPointScenario(collectionPointScenario: CollectionPointScenario): Promise&lt;void&gt;</text><ellipse cx="3424.5" cy="952.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="3433.5" y="955.8901">getVehicleTypes(): VehicleType[]</text><ellipse cx="3424.5" cy="965.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="3433.5" y="968.6948">addVehicleType(title: string): Promise&lt;VehicleType&gt;</text><ellipse cx="3424.5" cy="978.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="3433.5" y="981.4995">deleteVehicleType(vehicleType: VehicleType): Promise&lt;void&gt;</text><ellipse cx="3424.5" cy="991.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="3433.5" y="994.3042">getResults(): Result[]</text><ellipse cx="3424.5" cy="1003.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="1722" x="3433.5" y="1007.1089">addResult(timing: Date, garbageScenarioVersion: GarbageScenarioVersion, collectionPointScenarioVersion: CollectionPointScenarioVersion, vehTypeVersAndWasteDepotNodes: [VehicleTypeVersion, MapNode[]][], model: string, maxWalkingDistance: number, minWaste: number | null): Promise&lt;Result&gt;</text><ellipse cx="3424.5" cy="1016.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="3433.5" y="1019.9136">deleteResult(result: Result): Promise&lt;void&gt;</text><ellipse cx="3424.5" cy="1029.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="3433.5" y="1032.7183">setProjectName(projectname: string): Promise&lt;void&gt;</text><ellipse cx="3424.5" cy="1042.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="3433.5" y="1045.5229">setModifiedBy(userOrUndefined: User | undefined): void</text><ellipse cx="3424.5" cy="1055.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="3433.5" y="1058.3276">addUserObject(user: User): void</text><ellipse cx="3424.5" cy="1067.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="3433.5" y="1071.1323">addUser(user: User): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3421.5" y="1077.7266"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="3433.5" y="1083.937">addUserToProjectDB(user: User): Promise&lt;void&gt;</text><ellipse cx="3424.5" cy="1093.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="3433.5" y="1096.7417">deleteUserObject(userToDelete: User): void</text><ellipse cx="3424.5" cy="1106.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="3433.5" y="1109.5464">deleteUser(userToDelete: User): Promise&lt;void&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3421.5" y="1116.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="3433.5" y="1122.3511">deleteUserFromProjectDB(user: User): Promise&lt;void&gt;</text><ellipse cx="3424.5" cy="1131.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="320" x="3433.5" y="1135.1558">getProjectObject(projectname: string): Promise&lt;Project&gt;</text><ellipse cx="3424.5" cy="1144.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="301" x="3433.5" y="1147.9604">createProject(projectname: string): Promise&lt;Project&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3421.5" y="1154.5547"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="736" x="3433.5" y="1160.7651">createProjectSQLFiles(setupSQLTemplateRelPath: string, deleteSQLTemplateRelPath: string, projectname: string): Promise&lt;void&gt;</text><!--MD5=[706e73df52f3df32f52be1ce9adb217e]
class Graph--><rect codeLine="204" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="176.0469" id="Graph" style="stroke:#A80036;stroke-width:1.5;" width="454" x="293.5" y="1265.5"/><ellipse cx="498.25" cy="1281.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M500.5938,1277.1719 C499.6563,1276.7344 499.0625,1276.5938 498.1875,1276.5938 C495.5625,1276.5938 493.5625,1278.6719 493.5625,1281.3906 L493.5625,1282.5156 C493.5625,1285.0938 495.6719,1286.9844 498.5625,1286.9844 C499.7813,1286.9844 500.9375,1286.6875 501.6875,1286.1406 C502.2656,1285.7344 502.5938,1285.2813 502.5938,1284.8906 C502.5938,1284.4375 502.2031,1284.0469 501.7344,1284.0469 C501.5156,1284.0469 501.3125,1284.125 501.125,1284.3125 C500.6719,1284.7969 500.6719,1284.7969 500.4844,1284.8906 C500.0625,1285.1563 499.375,1285.2813 498.6094,1285.2813 C496.5625,1285.2813 495.2656,1284.1875 495.2656,1282.4844 L495.2656,1281.3906 C495.2656,1279.6094 496.5156,1278.2969 498.25,1278.2969 C498.8281,1278.2969 499.4375,1278.4531 499.9063,1278.7031 C500.3906,1278.9844 500.5625,1279.2031 500.6563,1279.6094 C500.7188,1280.0156 500.75,1280.1406 500.8906,1280.2656 C501.0313,1280.4063 501.2656,1280.5156 501.4844,1280.5156 C501.75,1280.5156 502.0156,1280.375 502.1875,1280.1563 C502.2969,1280 502.3281,1279.8125 502.3281,1279.3906 L502.3281,1277.9688 C502.3281,1277.5313 502.3125,1277.4063 502.2188,1277.25 C502.0625,1276.9844 501.7813,1276.8438 501.4844,1276.8438 C501.1875,1276.8438 500.9844,1276.9375 500.7656,1277.25 L500.5938,1277.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="36" x="518.75" y="1285.6543">Graph</text><line style="stroke:#A80036;stroke-width:1.5;" x1="294.5" x2="746.5" y1="1297.5" y2="1297.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="301.5" y="1305.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="313.5" y="1311.7104">project: Project | undefined</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="301.5" y="1318.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="313.5" y="1324.5151">nodes: MapNode[]</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="301.5" y="1331.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="313.5" y="1337.3198">arcs: MapArc[]</text><line style="stroke:#A80036;stroke-width:1.5;" x1="294.5" x2="746.5" y1="1343.9141" y2="1343.9141"/><ellipse cx="304.5" cy="1354.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="313.5" y="1358.1245">getProject(): Project | undefined</text><ellipse cx="304.5" cy="1367.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="313.5" y="1370.9292">setProject(project: Project): void</text><ellipse cx="304.5" cy="1380.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="313.5" y="1383.7339">getNodes(): MapNode[]</text><ellipse cx="304.5" cy="1393.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="313.5" y="1396.5386">getArcs(): MapArc[]</text><ellipse cx="304.5" cy="1406.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="286" x="313.5" y="1409.3433">getGraphObject(project: Project): Promise&lt;Graph&gt;</text><ellipse cx="304.5" cy="1418.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="428" x="313.5" y="1422.1479">createGraph(emptyGraph: Graph, nodes: MapNode[], arcs: MapArc[]): Graph</text><ellipse cx="304.5" cy="1431.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="309" x="313.5" y="1434.9526">createEmptyGraph(project: Project | undefined): Graph</text><!--MD5=[b7f7a168e9caabdc2a012a9670567e2f]
class MapNode--><rect codeLine="216" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="252.875" id="MapNode" style="stroke:#A80036;stroke-width:1.5;" width="1102" x="782.5" y="1227"/><ellipse cx="1300.75" cy="1243" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1303.0938,1238.6719 C1302.1563,1238.2344 1301.5625,1238.0938 1300.6875,1238.0938 C1298.0625,1238.0938 1296.0625,1240.1719 1296.0625,1242.8906 L1296.0625,1244.0156 C1296.0625,1246.5938 1298.1719,1248.4844 1301.0625,1248.4844 C1302.2813,1248.4844 1303.4375,1248.1875 1304.1875,1247.6406 C1304.7656,1247.2344 1305.0938,1246.7813 1305.0938,1246.3906 C1305.0938,1245.9375 1304.7031,1245.5469 1304.2344,1245.5469 C1304.0156,1245.5469 1303.8125,1245.625 1303.625,1245.8125 C1303.1719,1246.2969 1303.1719,1246.2969 1302.9844,1246.3906 C1302.5625,1246.6563 1301.875,1246.7813 1301.1094,1246.7813 C1299.0625,1246.7813 1297.7656,1245.6875 1297.7656,1243.9844 L1297.7656,1242.8906 C1297.7656,1241.1094 1299.0156,1239.7969 1300.75,1239.7969 C1301.3281,1239.7969 1301.9375,1239.9531 1302.4063,1240.2031 C1302.8906,1240.4844 1303.0625,1240.7031 1303.1563,1241.1094 C1303.2188,1241.5156 1303.25,1241.6406 1303.3906,1241.7656 C1303.5313,1241.9063 1303.7656,1242.0156 1303.9844,1242.0156 C1304.25,1242.0156 1304.5156,1241.875 1304.6875,1241.6563 C1304.7969,1241.5 1304.8281,1241.3125 1304.8281,1240.8906 L1304.8281,1239.4688 C1304.8281,1239.0313 1304.8125,1238.9063 1304.7188,1238.75 C1304.5625,1238.4844 1304.2813,1238.3438 1303.9844,1238.3438 C1303.6875,1238.3438 1303.4844,1238.4375 1303.2656,1238.75 L1303.0938,1238.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="57" x="1321.25" y="1247.1543">MapNode</text><line style="stroke:#A80036;stroke-width:1.5;" x1="783.5" x2="1883.5" y1="1259" y2="1259"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="790.5" y="1267"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="802.5" y="1273.2104">graph: Graph</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="790.5" y="1279.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="802.5" y="1286.0151">id: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="790.5" y="1292.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="802.5" y="1298.8198">xCoordinate: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="790.5" y="1305.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="802.5" y="1311.6245">yCoordinate: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="790.5" y="1318.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="802.5" y="1324.4292">nrInhab: number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="790.5" y="1331.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="802.5" y="1337.2339">vehicleDepot: boolean</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="790.5" y="1343.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="802.5" y="1350.0386">wasteDepot: boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="783.5" x2="1883.5" y1="1356.6328" y2="1356.6328"/><ellipse cx="793.5" cy="1367.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="802.5" y="1370.8433">getGraph(): Graph</text><ellipse cx="793.5" cy="1380.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="802.5" y="1383.6479">getNodeID(): number</text><ellipse cx="793.5" cy="1393.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="802.5" y="1396.4526">getXCoordinate(): number</text><ellipse cx="793.5" cy="1406.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="802.5" y="1409.2573">getYCoordinate(): number</text><ellipse cx="793.5" cy="1418.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="802.5" y="1422.062">getNrInhab(): number</text><ellipse cx="793.5" cy="1431.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="802.5" y="1434.8667">getVehicleDepot(): boolean</text><ellipse cx="793.5" cy="1444.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="802.5" y="1447.6714">getWasteDepot(): boolean</text><ellipse cx="793.5" cy="1457.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="1076" x="802.5" y="1460.4761">createNode(projectname: string, graph: Graph, id: number, xCoordinate: number, yCoordinate: number, nrInhab: number, vehicleDepot: boolean, wasteDepot: boolean): Promise&lt;MapNode&gt;</text><ellipse cx="793.5" cy="1470.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="802.5" y="1473.2808">getNodesObjects(projectname: string, graph: Graph): Promise&lt;MapNode[]&gt;</text><!--MD5=[deaf5c933eb712b3fdc320455b121438]
class CollectionPointScenarioVersion--><rect codeLine="234" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="163.2422" id="CollectionPointScenarioVersion" style="stroke:#A80036;stroke-width:1.5;" width="1160" x="1919.5" y="1272"/><ellipse cx="2402.25" cy="1288" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2404.5938,1283.6719 C2403.6563,1283.2344 2403.0625,1283.0938 2402.1875,1283.0938 C2399.5625,1283.0938 2397.5625,1285.1719 2397.5625,1287.8906 L2397.5625,1289.0156 C2397.5625,1291.5938 2399.6719,1293.4844 2402.5625,1293.4844 C2403.7813,1293.4844 2404.9375,1293.1875 2405.6875,1292.6406 C2406.2656,1292.2344 2406.5938,1291.7813 2406.5938,1291.3906 C2406.5938,1290.9375 2406.2031,1290.5469 2405.7344,1290.5469 C2405.5156,1290.5469 2405.3125,1290.625 2405.125,1290.8125 C2404.6719,1291.2969 2404.6719,1291.2969 2404.4844,1291.3906 C2404.0625,1291.6563 2403.375,1291.7813 2402.6094,1291.7813 C2400.5625,1291.7813 2399.2656,1290.6875 2399.2656,1288.9844 L2399.2656,1287.8906 C2399.2656,1286.1094 2400.5156,1284.7969 2402.25,1284.7969 C2402.8281,1284.7969 2403.4375,1284.9531 2403.9063,1285.2031 C2404.3906,1285.4844 2404.5625,1285.7031 2404.6563,1286.1094 C2404.7188,1286.5156 2404.75,1286.6406 2404.8906,1286.7656 C2405.0313,1286.9063 2405.2656,1287.0156 2405.4844,1287.0156 C2405.75,1287.0156 2406.0156,1286.875 2406.1875,1286.6563 C2406.2969,1286.5 2406.3281,1286.3125 2406.3281,1285.8906 L2406.3281,1284.4688 C2406.3281,1284.0313 2406.3125,1283.9063 2406.2188,1283.75 C2406.0625,1283.4844 2405.7813,1283.3438 2405.4844,1283.3438 C2405.1875,1283.3438 2404.9844,1283.4375 2404.7656,1283.75 L2404.5938,1283.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="186" x="2422.75" y="1292.1543">CollectionPointScenarioVersion</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1920.5" x2="3078.5" y1="1304" y2="1304"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1927.5" y="1312"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="271" x="1939.5" y="1318.2104">collectionPointScenario: CollectionPointScenario</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1927.5" y="1324.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="1939.5" y="1331.0151">timing: Date</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1927.5" y="1337.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="1939.5" y="1343.8198">nodesPotCP: [MapNode, boolean][]</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1920.5" x2="3078.5" y1="1350.4141" y2="1350.4141"/><ellipse cx="1930.5" cy="1361.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="1939.5" y="1364.6245">getCollectionPointScenario(): CollectionPointScenario</text><ellipse cx="1930.5" cy="1374.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="1939.5" y="1377.4292">getTiming(): Date</text><ellipse cx="1930.5" cy="1387.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="1939.5" y="1390.2339">getNodesPotCP(): [MapNode, boolean][]</text><ellipse cx="1930.5" cy="1399.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="1939.5" y="1403.0386">isNewestVersion(): boolean</text><ellipse cx="1930.5" cy="1412.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="1134" x="1939.5" y="1415.8433">createCollectionPointScenarioVersion(projectname: string, collectionPointScenario: CollectionPointScenario, timing: Date, nodesPotCP: [MapNode, boolean][]): Promise&lt;CollectionPointScenarioVersion&gt;</text><ellipse cx="1930.5" cy="1425.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="1004" x="1939.5" y="1428.6479">getCollectionPointScenarioVersionsObjects(projectname: string, collectionPointScenario: CollectionPointScenario, nodes: MapNode[]): Promise&lt;CollectionPointScenarioVersion[]&gt;</text><!--MD5=[b13ae7ee9cb0c073cf0fba244f56fa0b]
class CollectionPointScenario--><rect codeLine="245" fill="#FEFECE" filter="url(#f1iajic0kfmseo)" height="188.8516" id="CollectionPointScenario" style="stroke:#A80036;stroke-width:1.5;" width="794" x="3114.5" y="1259"/><ellipse cx="3437.25" cy="1275" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3439.5938,1270.6719 C3438.6563,1270.2344 3438.0625,1270.0938 3437.1875,1270.0938 C3434.5625,1270.0938 3432.5625,1272.1719 3432.5625,1274.8906 L3432.5625,1276.0156 C3432.5625,1278.5938 3434.6719,1280.4844 3437.5625,1280.4844 C3438.7813,1280.4844 3439.9375,1280.1875 3440.6875,1279.6406 C3441.2656,1279.2344 3441.5938,1278.7813 3441.5938,1278.3906 C3441.5938,1277.9375 3441.2031,1277.5469 3440.7344,1277.5469 C3440.5156,1277.5469 3440.3125,1277.625 3440.125,1277.8125 C3439.6719,1278.2969 3439.6719,1278.2969 3439.4844,1278.3906 C3439.0625,1278.6563 3438.375,1278.7813 3437.6094,1278.7813 C3435.5625,1278.7813 3434.2656,1277.6875 3434.2656,1275.9844 L3434.2656,1274.8906 C3434.2656,1273.1094 3435.5156,1271.7969 3437.25,1271.7969 C3437.8281,1271.7969 3438.4375,1271.9531 3438.9063,1272.2031 C3439.3906,1272.4844 3439.5625,1272.7031 3439.6563,1273.1094 C3439.7188,1273.5156 3439.75,1273.6406 3439.8906,1273.7656 C3440.0313,1273.9063 3440.2656,1274.0156 3440.4844,1274.0156 C3440.75,1274.0156 3441.0156,1273.875 3441.1875,1273.6563 C3441.2969,1273.5 3441.3281,1273.3125 3441.3281,1272.8906 L3441.3281,1271.4688 C3441.3281,1271.0313 3441.3125,1270.9063 3441.2188,1270.75 C3441.0625,1270.4844 3440.7813,1270.3438 3440.4844,1270.3438 C3440.1875,1270.3438 3439.9844,1270.4375 3439.7656,1270.75 L3439.5938,1270.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="140" x="3457.75" y="1279.1543">CollectionPointScenario</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3115.5" x2="3907.5" y1="1291" y2="1291"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3122.5" y="1299"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="3134.5" y="1305.2104">project: Project</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3122.5" y="1311.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="3134.5" y="1318.0151">title: string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3122.5" y="1324.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="3134.5" y="1330.8198">collectionPointScenarioVersions: CollectionPointScenarioVersion[]</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3115.5" x2="3907.5" y1="1337.4141" y2="1337.4141"/><ellipse cx="3125.5" cy="1348.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="3134.5" y="1351.6245">getTitle(): string</text><ellipse cx="3125.5" cy="1361.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="3134.5" y="1364.4292">setTitle(title: string): Promise&lt;void&gt;</text><ellipse cx="3125.5" cy="1374.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="3134.5" y="1377.2339">getCollectionPointScenarioVersions(): CollectionPointScenarioVersion[]</text><ellipse cx="3125.5" cy="1386.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="723" x="3134.5" y="1390.0386">addCollectionPointScenarioVersion(timing: Date, nodesPotCP: [MapNode, boolean][]): Promise&lt;CollectionPointScenarioVersion&gt;</text><ellipse cx="3125.5" cy="1399.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="768" x="3134.5" y="1402.8433">deleteCollectionPointScenarioVersion(collectionPointScenarioVersion: CollectionPointScenarioVersion, results: Result[]): Promise&lt;void&gt;</text><ellipse cx="3125.5" cy="1412.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="3134.5" y="1415.6479">getProject(): Project</text><ellipse cx="3125.5" cy="1425.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="532" x="3134.5" y="1428.4526">createCollectionPointScenario(project: Project, title: string): Promise&lt;CollectionPointScenario&gt;</text><ellipse cx="3125.5" cy="1438.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="614" x="3134.5" y="1441.2573">getCollectionPointScenariosObjects(project: Project, nodes: MapNode[]): Promise&lt;CollectionPointScenario[]&gt;</text><!--MD5=[38a97be9ec3d58ec1686f14bdd82df6b]
link Logger to DatabaseHandler--><!--MD5=[63c3f9b275138c3411405268cb1f8507]
link DatabaseHandler to MapArc--><!--MD5=[8193a76e53331398c1c7d510ba713f92]
link MapArc to User--><!--MD5=[a1f7ca9a8c3d3db75413c91ddef7ae30]
link Logger to GarbageScenarioVersion--><!--MD5=[2991b454468b0a89a4cb59ae2732ab18]
link GarbageScenarioVersion to VehicleType--><!--MD5=[60ba1de6f969835bd6b7e66e1d86c443]
link VehicleType to VehicleTypeVersion--><!--MD5=[036b9fb46197e5cd2fd776687d936cf1]
link VehicleTypeVersion to Tour--><!--MD5=[6268c3ef46dd1fb938938394eb41cff5]
link GarbageScenarioVersion to Facility--><!--MD5=[cdbf842e7481e17d617477b6cd79a3d0]
link Facility to Result--><!--MD5=[5f9e02f5d06654013d84392347ccc78e]
link Result to GarbageScenario--><!--MD5=[de3258e131986387b939830352e8d202]
link GarbageScenario to Project--><!--MD5=[de4817cd78724f544972a16bb0594604]
link Facility to Graph--><!--MD5=[70f659314fb79539aeab7786ac123adc]
link Graph to MapNode--><!--MD5=[63ef27e3fe5ff6f34da1c1fe0bae114d]
link MapNode to CollectionPointScenarioVersion--><!--MD5=[0cdb8a078a4cf030b660e3582d65dd55]
link CollectionPointScenarioVersion to CollectionPointScenario--><!--MD5=[37e820ebc4d946610c2907999c3f16af]
@startuml
class Logger {
    -loggers: { [loggerTitle: string]: winston.Logger; }
    -today: string
    +dbLog(information: string, severity: string): void
    +fileAndConsoleLog(information: string, severity: string): void
    -updateLoggers(): void
    -{static} logger: Logger
    +{static} getLogger(): Logger
}
class DatabaseHandler {
    -poolUp: boolean
    -pool: Pool
    +endPool(): Promise<void>
    +querying(queryString: string): Promise<Record<string, string | number | boolean | Date | null>[]>
    +setupProject(projectname: string): Promise<void>
    +deleteProject(projectname: string): Promise<void>
    -setupOrDeleteProject(projectname: string, setupOrDelete: string): Promise<void>
    -execSQLScript(relSQLFilePath: string): Promise<void>
    -{static} dbHandler: DatabaseHandler
    +{static} getDatabaseHandler(): Promise<DatabaseHandler>
}
class MapArc {
    -graph: Graph
    -sourceNode: MapNode
    -destinationNode: MapNode
    -distance: number
    +getGraph(): Graph
    +getSourceNode(): MapNode
    +getDestinationNode(): MapNode
    +getDistance(): number
    +{static} getArcsObjects(projectname: string, graph: Graph, nodes: MapNode[]): Promise<MapArc[]>
    +{static} createArc(projectname: string, graph: Graph, sourceNode: MapNode, destinationNode: MapNode, distance: number): Promise<MapArc>
}
class User {
    -email: string
    -admin: boolean
    -passwordUnsafeVar: string
    -projects: Project[]
    +getMail(): string
    +setMail(email: string): Promise<void>
    +getAdmin(): boolean
    +setAdmin(admin: boolean): Promise<void>
    +getPassword(): string
    +setPassword(newPassword: string): Promise<void>
    +getProjects(): Project[]
    +addProjectObject(project: Project): void
    +addProject(project: Project): Promise<void>
    -addProjectToUserDB(project: Project): Promise<void>
    +deleteProjectObject(projectToDelete: Project): void
    +deleteProject(projectToDelete: Project): Promise<void>
    -deleteProjectFromUserDB(project: Project): Promise<void>
    +{static} getUserObject(email: string, admin: boolean, passwordUnsafeVar: string): User
    +{static} createUser(email: string, admin: boolean, passwordUnsafeVar: string): Promise<User>
}
class GarbageScenarioVersion {
    -garbageScenario: GarbageScenario
    -timing: Date
    -nodesWaste: [MapNode, number][]
    +getGarbageScenario(): GarbageScenario
    +getTiming(): Date
    +getNodesWaste(): [MapNode, number][]
    +isNewestVersion(): boolean
    +{static} createGarbageScenarioVersion(projectname: string, garbageScenario: GarbageScenario, timing: Date, nodesWaste: [MapNode, number][]): Promise<GarbageScenarioVersion>
    +{static} getGarbageScenarioVersionsObjects(projectname: string, garbageScenario: GarbageScenario, nodes: MapNode[]): Promise<GarbageScenarioVersion[]>
}
class VehicleType {
    -project: Project
    -title: string
    -vehicleTypeVersions: VehicleTypeVersion[]
    +getTitle(): string
    +setTitle(title: string): Promise<void>
    +getVehicleTypeVersions(): VehicleTypeVersion[]
    +addVehicleTypeVersion(timing: Date, averageSpeedTour: number, averageSpeedDepot: number, averageStopTime: number, vehicleCapacity: number, arcsActivated: [MapArc, boolean][]): Promise<VehicleTypeVersion>
    +deleteVehicleTypeVersion(vehicleTypeVersion: VehicleTypeVersion, results: Result[]): Promise<void>
    +{static} createVehicleType(project: Project, title: string): Promise<VehicleType>
    +{static} getVehicleTypesObjects(project: Project, graph: Graph): Promise<VehicleType[]>
}
class VehicleTypeVersion {
    -vehicleType: VehicleType
    -timing: Date
    -averageSpeedTour: number
    -averageSpeedDepot: number
    -averageStopTime: number
    -vehicleCapacity: number
    -arcsActivated: [MapArc, boolean][]
    +getVehicleType(): VehicleType
    +getTiming(): Date
    +getAverageSpeedTour(): number
    +getAverageSpeedDepot(): number
    +getAverageStopTime(): number
    +getVehicleCapacity(): number
    +getArcsActivated(): [MapArc, boolean][]
    +isNewestVersion(): boolean
    +{static} createVehicleTypeVersion(projectname: string, vehicleType: VehicleType, timing: Date, averageSpeedTour: number, averageSpeedDepot: number, averageStopTime: number, vehicleCapacity: number, arcsActivated: [MapArc, boolean][]): Promise<VehicleTypeVersion>
    +{static} getVehicleTypeVersionsObjects(projectname: string, vehicleType: VehicleType, graph: Graph): Promise<VehicleTypeVersion[]>
}
class Tour {
    -result: Result
    -timing: Date
    -tourtime: number
    -tourwaste: number
    -tourNodes: [MapNode, number, number][]
    -vehicleTypeVersion: VehicleTypeVersion
    +getResult(): Result
    +getTourTiming(): Date
    +getTourTime(): number
    +getTourWaste(): number
    +getTourNodes(): [MapNode, number, number][]
    +getVehicleTypeVersion(): VehicleTypeVersion
    +{static} createTour(projectname: string, result: Result, timing: Date, tourtime: number, tourwaste: number, tourNodes: [MapNode, number, number][], vehicleTypeVersion: VehicleTypeVersion): Promise<Tour>
    +{static} getToursObjects(projectname: string, result: Result, nodes: MapNode[], vehicleTypes: VehicleType[]): Promise<Tour[]>
}
class Facility {
    -result: Result
    -node: MapNode
    -waste: number
    +getResult(): Result
    +getNode(): MapNode
    +getWaste(): number
    +{static} getFacilitiesObjects(result: Result, nodes: MapNode[]): Promise<Facility[]>
    +{static} createFacility(node: MapNode, result: Result, waste: number): Promise<Facility>
}
class Result {
    -project: Project
    -timing: Date
    -garbageScenarioVersion: GarbageScenarioVersion
    -collectionPointScenarioVersion: CollectionPointScenarioVersion
    -vehTypeVersAndWasteDepotNodes: [VehicleTypeVersion, MapNode[]][]
    -model: string
    -maxWalkingDistance: number
    -minWaste: number | null
    -totalTime: number
    -tours: Tour[]
    -facilities: Facility[]
    -completed: boolean
    -createXMLInputLeaveInFolderAndExecuteOptimization(): Promise<void>
    +getProject(): Project
    +getTiming(): Date
    +getGarbageScenarioVersion(): GarbageScenarioVersion
    +getCollectionPointScenarioVersion(): CollectionPointScenarioVersion
    +getVehTypeVersAndWasteDepotNodes(): [VehicleTypeVersion, MapNode[]][]
    +getModel(): string
    +getMaxWalkingDistance(): number
    +getMinWaste(): number | null
    +getTours(): Tour[]
    +setResultData(toursData: Tour[] | [number, number, [MapNode, number, number][], VehicleTypeVersion][], facilitiesData: [MapNode, number][] | Facility[]): Promise<void>
    -setTours(toursData: Tour[] | [number, number, [MapNode, number, number][], VehicleTypeVersion][]): Promise<void>
    +getCompleted(): boolean
    +getTotalTime(): number
    -setTotalTime(totalTime: number): Promise<void>
    -setFacilities(facilitiesData: [MapNode, number][] | Facility[]): Promise<void>
    +getFacilities(): Facility[]
    +{static} createResult(project: Project, timing: Date, garbageScenarioVersion: GarbageScenarioVersion, collectionPointScenarioVersion: CollectionPointScenarioVersion, vehTypeVersAndWasteDepotNodes: [VehicleTypeVersion, MapNode[]][], model: string, maxWalkingDistance: number, minWaste: number | null): Promise<Result>
    +{static} getResultsObjects(project: Project, garbageScenarios: GarbageScenario[], collectionPointScenarios: CollectionPointScenario[], vehicleTypes: VehicleType[], nodes: MapNode[]): Promise<Result[]>
}
class GarbageScenario {
    -project: Project
    -title: string
    -garbageScenarioVersions: GarbageScenarioVersion[]
    +getTitle(): string
    +setTitle(title: string): Promise<void>
    +getGarbageScenarioVersions(): GarbageScenarioVersion[]
    +addGarbageScenarioVersion(timing: Date, nodesWaste: [MapNode, number][]): Promise<GarbageScenarioVersion>
    +deleteGarbageScenarioVersion(garbageScenarioVersion: GarbageScenarioVersion, results: Result[]): Promise<void>
    +{static} createGarbageScenario(project: Project, title: string): Promise<GarbageScenario>
    +{static} getGarbageScenariosObjects(project: Project, nodes: MapNode[]): Promise<GarbageScenario[]>
}
class Project {
    -projectname: string
    -users: User[]
    -graph: Graph
    -garbageScenarios: GarbageScenario[]
    -collectionPointScenarios: CollectionPointScenario[]
    -vehicleTypes: VehicleType[]
    -results: Result[]
    -modifiedBy: User | undefined
    +getProjectName(): string
    +getUsers(): User[]
    +getGraph(): Graph
    +getGarbageScenarios(): GarbageScenario[]
    +addGarbageScenario(title: string): Promise<GarbageScenario>
    +deleteGarbageScenario(garbageScenario: GarbageScenario): Promise<void>
    +getCollectionPointScenarios(): CollectionPointScenario[]
    +addCollectionPointScenario(title: string): Promise<CollectionPointScenario>
    +deleteCollectionPointScenario(collectionPointScenario: CollectionPointScenario): Promise<void>
    +getVehicleTypes(): VehicleType[]
    +addVehicleType(title: string): Promise<VehicleType>
    +deleteVehicleType(vehicleType: VehicleType): Promise<void>
    +getResults(): Result[]
    +addResult(timing: Date, garbageScenarioVersion: GarbageScenarioVersion, collectionPointScenarioVersion: CollectionPointScenarioVersion, vehTypeVersAndWasteDepotNodes: [VehicleTypeVersion, MapNode[]][], model: string, maxWalkingDistance: number, minWaste: number | null): Promise<Result>
    +deleteResult(result: Result): Promise<void>
    +setProjectName(projectname: string): Promise<void>
    +setModifiedBy(userOrUndefined: User | undefined): void
    +addUserObject(user: User): void
    +addUser(user: User): Promise<void>
    -addUserToProjectDB(user: User): Promise<void>
    +deleteUserObject(userToDelete: User): void
    +deleteUser(userToDelete: User): Promise<void>
    -deleteUserFromProjectDB(user: User): Promise<void>
    +{static} getProjectObject(projectname: string): Promise<Project>
    +{static} createProject(projectname: string): Promise<Project>
    -{static} createProjectSQLFiles(setupSQLTemplateRelPath: string, deleteSQLTemplateRelPath: string, projectname: string): Promise<void>
}
class Graph {
    -project: Project | undefined
    -nodes: MapNode[]
    -arcs: MapArc[]
    +getProject(): Project | undefined
    +setProject(project: Project): void
    +getNodes(): MapNode[]
    +getArcs(): MapArc[]
    +{static} getGraphObject(project: Project): Promise<Graph>
    +{static} createGraph(emptyGraph: Graph, nodes: MapNode[], arcs: MapArc[]): Graph
    +{static} createEmptyGraph(project: Project | undefined): Graph
}
class MapNode {
    -graph: Graph
    -id: number
    -xCoordinate: number
    -yCoordinate: number
    -nrInhab: number
    -vehicleDepot: boolean
    -wasteDepot: boolean
    +getGraph(): Graph
    +getNodeID(): number
    +getXCoordinate(): number
    +getYCoordinate(): number
    +getNrInhab(): number
    +getVehicleDepot(): boolean
    +getWasteDepot(): boolean
    +{static} createNode(projectname: string, graph: Graph, id: number, xCoordinate: number, yCoordinate: number, nrInhab: number, vehicleDepot: boolean, wasteDepot: boolean): Promise<MapNode>
    +{static} getNodesObjects(projectname: string, graph: Graph): Promise<MapNode[]>
}
class CollectionPointScenarioVersion {
    -collectionPointScenario: CollectionPointScenario
    -timing: Date
    -nodesPotCP: [MapNode, boolean][]
    +getCollectionPointScenario(): CollectionPointScenario
    +getTiming(): Date
    +getNodesPotCP(): [MapNode, boolean][]
    +isNewestVersion(): boolean
    +{static} createCollectionPointScenarioVersion(projectname: string, collectionPointScenario: CollectionPointScenario, timing: Date, nodesPotCP: [MapNode, boolean][]): Promise<CollectionPointScenarioVersion>
    +{static} getCollectionPointScenarioVersionsObjects(projectname: string, collectionPointScenario: CollectionPointScenario, nodes: MapNode[]): Promise<CollectionPointScenarioVersion[]>
}
class CollectionPointScenario {
    -project: Project
    -title: string
    -collectionPointScenarioVersions: CollectionPointScenarioVersion[]
    +getTitle(): string
    +setTitle(title: string): Promise<void>
    +getCollectionPointScenarioVersions(): CollectionPointScenarioVersion[]
    +addCollectionPointScenarioVersion(timing: Date, nodesPotCP: [MapNode, boolean][]): Promise<CollectionPointScenarioVersion>
    +deleteCollectionPointScenarioVersion(collectionPointScenarioVersion: CollectionPointScenarioVersion, results: Result[]): Promise<void>
    +getProject(): Project
    +{static} createCollectionPointScenario(project: Project, title: string): Promise<CollectionPointScenario>
    +{static} getCollectionPointScenariosObjects(project: Project, nodes: MapNode[]): Promise<CollectionPointScenario[]>
}
@enduml

PlantUML version 1.2021.9beta2(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>